name: CI/CD for Flask App

on:
  push:
    branches:
      - master
      - feature/tests  

jobs:
  build:
    runs-on: ubuntu-latest
    services: 
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: example_sum_postgres_2moj_user
          POSTGRES_PASSWORD: lcOZ8DlDUF3Mu2ZnQLm3Xcq9AGnqlJFk
          POSTGRES_DB: example_sum_postgres_2moj
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: 
        run: |
          python -m unittest discover -s . -p "test_app.py"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install libpq-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev



      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate


      - name: Set environment variables
        run: |
          echo "DATABASE_URL=postgresql://example_sum_postgres_2moj_user:lcOZ8DlDUF3Mu2ZnQLm3Xcq9AGnqlJFk@dpg-ctpfkrrqf0us73ebldcg-a.ohio-postgres.render.com/example_sum_postgres_2moj" >> $GITHUB_ENV


    
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}